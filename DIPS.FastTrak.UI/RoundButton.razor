<button class="RoundButton @GetCssClass()" @onclick="HandleClick" @attributes="Attributes">
    @ChildContent
</button>

@code {
    public enum RoundButtonStyle
    {
        Default,
        Alert
    }

    [CascadingParameter]
    internal IPopupControl? PopupControl { get; set; }

    [Parameter(CaptureUnmatchedValues = true)]
    public Dictionary<string, object>? Attributes { get; set; }

    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    [Parameter]
    public RoundButtonStyle Style { get; set; } = RoundButtonStyle.Default;

    [Parameter]
    public EventCallback OnClick { get; set; }

    private string GetCssClass() => PopupControl?.GetIsOpen() == true ? "IsOpen" : "";

    private async Task HandleClick(MouseEventArgs e)
    {
        if (PopupControl != null)
        {
            if (PopupControl.GetIsOpen())
                await PopupControl.CloseAsync();
            else
                await PopupControl.OpenAsync();
        }
        await OnClick.InvokeAsync();
    }
}